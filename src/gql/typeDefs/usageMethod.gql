#
# QUERIES
#

extend type Query {
  """
  Select a UsageMethod by its snake_case name, e.g. 'pulse'.
  """
  usageMethodByName(
    generation: Int = 8
    generations: [Int]
    name: String!
  ): [UsageMethod!]!

  """
  Select UsageMethods by their snake_case name, e.g. 'pulse'.
  """
  usageMethodsByName(
    generation: Int = 8
    generations: [Int]
    names: [String!]!
  ): [UsageMethod!]!
  
  """
  Select UsageMethods with filtering and pagination.
  """
  usageMethods(
    generation: Int = 8
    generations: [Int]
    pagination: PaginationInput
    filter: UsageMethodFilter
  ): [UsageMethod!]!
}

#
# NODES AND HELPER FIELDS
#

type UsageMethod implements Node {
  id: ID!

  """
  E.g. 'sound' activates 'liquid_voice'.
  """
  activatesAbility(filter: AbilityFilter): UsageMethodActivatesAbilityConnection

  """
  E.g. 'sound' activates 'throat_spray'.
  """
  activatesItem(filter: ItemFilter): UsageMethodActivatesItemConnection

  """
  E.g. 'mega_launcher' boosts 'pulse'.
  """ 
  boostedByAbility(filter: AbilityFilter): UsageMethodBoostedByAbilityConnection

  """
  As of Gen 8, no Items boost UsageMethods. Should such Items be introduced later, they will be immediately available here.
  """
  boostedByItem(filter: ItemFilter): UsageMethodBoostedByItemConnection

  """
  A custom description of this UsageMethod.
  """
  description: String!

  """
  The name of the UsageMethod in Title Case.
  """
  formattedName: String!

  """
  The Generation of this UsageMethod.
  """ 
  generation(filter: GenerationFilter): UsageMethodGenerationConnection
  
  """
  The Generation in which the UsageMethod became relevant. That is, in which the UsageMethod of the Move would interact with certain Abilities, Moves, etc. 
  
  For example, whether a Move had the UsageMethod 'bite' only became relevant when the ability 'strong_jaw' was introduced in Generation 6, even though Moves like 'crunch' have been around since Generation 2.
  """
  introduced(filter: GenerationFilter): UsageMethodIntroductionConnection

  """
  E.g. 'damp' prevents 'explosive'.
  """
  preventedByAbility(filter: AbilityFilter): UsageMethodResistedByAbilityConnection

  """
  E.g. 'throat_chop' prevents 'sound'.
  """
  preventedByMove(filter: MoveFilter): UsageMethodPreventedByMoveConnection

  """
  E.g. 'bullet_proof' resists 'ball'.
  """
  resistedByAbility(filter: AbilityFilter): UsageMethodResistedByAbilityConnection

  """
  E.g. 'safety_goggle' resists 'powder'.
  """
  resistedByItem(filter: ItemFilter): UsageMethodResistedByItemConnection

  """
  Moves which have this UsageMethod, e.g. The Move 'crunch' has the UsageMethod 'bite'.
  """
  moves(filter: MoveFilter): UsageMethodMoveConnection

  """
  The name of the UsageMethod in snake_case. 
  """
  name: String!
}

#
# CONNECTIONS AND EDGES
#

# ABILITY

type UsageMethodActivatesAbilityConnection implements Connection {
  id: String!
  count: Int!
  
  edges(
    pagination: PaginationInput
  ): [UsageMethodActivatesAbilityEdge!]!

}

type UsageMethodActivatesAbilityEdge implements Edge {  
  node: Ability!
}

type UsageMethodBoostedByAbilityConnection implements Connection {
  id: String!
  count: Int!
  
  edges(
    pagination: PaginationInput
  ): [UsageMethodBoostedByAbilityEdge!]!

}

type UsageMethodBoostedByAbilityEdge implements MultiplierEdge & Edge {  
  node: Ability!
  multiplier: Float!
}

type UsageMethodResistedByAbilityConnection implements Connection {
  id: String!
  count: Int!
  
  edges(
    pagination: PaginationInput
  ): [UsageMethodResistedByAbilityEdge!]!

}

type UsageMethodResistedByAbilityEdge implements Edge {  
  node: Ability!
  multiplier: Float!
}

type UsageMethodPreventedByAbilityConnection implements Connection {
  id: String!
  count: Int!
  
  edges(
    pagination: PaginationInput
  ): [UsageMethodPreventedByAbilityEdge!]!

}

type UsageMethodPreventedByAbilityEdge implements Edge {  
  node: Ability!
}

# GENERATION

type UsageMethodGenerationConnection implements Connection {
  id: String!
  edges(
    pagination: PaginationInput
  ): [UsageMethodGenerationEdge!]! 

}

type UsageMethodGenerationEdge implements Edge {  
  node: Generation!
}

type UsageMethodIntroductionConnection implements Connection {
  id: String!
  edges(
    pagination: PaginationInput
  ): [UsageMethodIntroductionEdge!]! 

}

type UsageMethodIntroductionEdge implements Edge {  
  node: Generation!
}

# ITEM

type UsageMethodActivatesItemConnection implements Connection {
  id: String!
  count: Int!
  
  edges(
    pagination: PaginationInput
  ): [UsageMethodActivatesItemEdge!]!

}

type UsageMethodActivatesItemEdge implements Edge {  
  node: Item!
}

type UsageMethodBoostedByItemConnection implements Connection {
  id: String!
  count: Int!
  
  edges(
    pagination: PaginationInput
  ): [UsageMethodBoostedByItemEdge!]!

}

type UsageMethodBoostedByItemEdge implements MultiplierEdge & Edge {  
  node: Item!
  multiplier: Float!
}

type UsageMethodResistedByItemConnection implements Connection {
  id: String!
  count: Int!
  
  edges(
    pagination: PaginationInput
  ): [UsageMethodResistedByItemEdge!]!

}

type UsageMethodResistedByItemEdge implements Edge {  
  node: Item!
  multiplier: Float!
}

# MOVE

type UsageMethodMoveConnection implements Connection {
  id: String!
  count: Int!
  
  edges(
    pagination: PaginationInput
  ): [UsageMethodMoveEdge!]!

}

type UsageMethodMoveEdge implements Edge {  
  node: Move!
}

type UsageMethodPreventedByMoveConnection implements Connection {
  id: String!
  count: Int!
  
  edges(
    pagination: PaginationInput
  ): [UsageMethodPreventedByMoveEdge!]!

}

type UsageMethodPreventedByMoveEdge implements Edge {  
  node: Move!
}

#
# INPUTS
#

input UsageMethodFilter {
  """
  The number of the Generation in which the UsageMethod was introduced.
  """
  introduced: Int

  """
  The number of the Generation after which the UsageMethod was introduced, inclusive.
  """
  introducedAfter: Int

  """
  The number of the Generation before which the UsageMethod was introduced, inclusive.
  """
  introducedBefore: Int

  """
  The name of the UsageMethod in snake_case.
  """
  name: String
  
  names: [String]

  """
  Entities whose name contains the given string, case-insensitive.
  """
  contains: String

  """
  Entities whose name ends with the given string, case-insensitive.
  """
  endsWith: String

  """
  Entities whose name starts with the given string, case-insensitive.
  """
  startsWith: String
}