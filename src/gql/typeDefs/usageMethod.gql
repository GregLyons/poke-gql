#
# QUERIES
#

extend type Query {
  usageMethodByID(id: ID!): UsageMethod!

  """
  Select a UsageMethod by its snake_case name, e.g. 'pulse'.
  """
  usageMethodByName(name: String!): UsageMethod!
  
  """
  Select UsageMethods, with optional cursor-based pagination.

  'introducedAfter' and 'introducedBefore' refer to the number of a Generation, and are inclusive.

  'startsWith', 'contains', 'endsWith' refer to the name, and are case-insensitive.
  """
  usageMethods(
    cursor: String,
    limit: Int,
    contains: String,
    endsWith: String,
    introducedAfter: Int,
    introducedBefore: Int,
    startsWith: String,
  ): [UsageMethod!]!
}

#
# NODES AND HELPER FIELDS
#

type UsageMethod implements Node {
  id: ID!

  abilityBoosts(input: ConnectionInput): UsageMethodBoostedByAbilityConnection

  abilityResists(input: ConnectionInput): UsageMethodResistedByAbilityConnection

  """
  The name of the UsageMethod in Title Case.
  """
  formattedName: String!
  
  """
  The Generation in which the UsageMethod became relevant. That is, in which the UsageMethod of the Move would interact with certain Abilities, Moves, etc. 
  
  For example, whether a Move had the UsageMethod 'bite' only became relevant when the ability 'strong_jaw' was introduced in Generation 6, even though Moves like 'crunch' have been around since Generation 2.
  """
  introduced(input: ConnectionInput): UsageMethodGenerationConnection

  itemBoosts(input: ConnectionInput): UsageMethodBoostedByItemConnection

  itemResists(input: ConnectionInput): UsageMethodResistedByItemConnection

  moves(input: ConnectionInput): UsageMethodMoveConnection

  """
  The name of the UsageMethod in snake_case. 
  """
  name: String!

}

#
# CONNECTIONS AND EDGES
#

# ABILITY

type UsageMethodBoostedByAbilityConnection implements Connection {
  edges: [UsageMethodBoostedByAbilityEdge!]!
  pageInfo: PageInfo!
}

type UsageMethodBoostedByAbilityEdge implements Edge {
  cursor: String!
  node: UsageMethod!
  multiplier: Float!
}

type UsageMethodResistedByAbilityConnection implements Connection {
  edges: [UsageMethodResistedByAbilityEdge!]!
  pageInfo: PageInfo!
}

type UsageMethodResistedByAbilityEdge implements Edge {
  cursor: String!
  node: UsageMethod!
  multiplier: Float!
}

# GENERATION

type UsageMethodGenerationConnection implements Connection {
  edges: [UsageMethodGenerationEdge!]! 
  pageInfo: PageInfo!
}

type UsageMethodGenerationEdge implements Edge {
  cursor: String!
  node: Generation!
}

# ITEM

type UsageMethodBoostedByItemConnection implements Connection {
  edges: [UsageMethodBoostedByItemEdge!]!
  pageInfo: PageInfo!
}

type UsageMethodBoostedByItemEdge implements Edge {
  cursor: String!
  node: UsageMethod!
  multiplier: Float!
}

type UsageMethodResistedByItemConnection implements Connection {
  edges: [UsageMethodResistedByItemEdge!]!
  pageInfo: PageInfo!
}

type UsageMethodResistedByItemEdge implements Edge {
  cursor: String!
  node: UsageMethod!
  multiplier: Float!
}

# MOVE

type UsageMethodMoveConnection implements Connection {
  edges: [UsageMethodMoveEdge!]!
  pageInfo: PageInfo!
}

type UsageMethodMoveEdge implements Edge {
  cursor: String!
  node: UsageMethod!
}