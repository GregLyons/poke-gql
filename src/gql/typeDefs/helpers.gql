"""
Interface for basic entities such as Ability, Move, etc.
"""
interface Node {
  id: ID!
}

"""
Interface for relationships between Nodes. See the description for Connection for more information.

May contain additional data about the relationship. 'node' refers to the ending Node. 

For example, PokemonMoveEdge represents an edge starting from a Pokemon Node and ending in a Move Node. It has an additional field 'learnMethod', which is a string describing how the Pokemon can learn the given Move. The 'node' field would be of type Move.
"""
interface Edge {
  cursor: String!
  node: Node!
}

"""
Interface for relationships between Nodes, satisfying the Relay spec. 'pageInfo' allows for pagination, while 'edges' refers to the Edges in the Connection.

For example, the 'moves' field in a Pokemon Node has type PokemonMoveConnection. The 'edges' field has type '[PokemonMoveEdge!]!'. The 'node' field of the PokemonMoveEdge type, in turn, has type 'Move!'. 

Continuing the example, PokemonMoveConnection has a counterpart in MovePokemonConnection, which is the type of the 'pokemon' field in a Move Node. The corresponding 'edges' field type is then '[MovePokemonEdge!]!', and the 'node' field of the MovePokemonEdge type has type 'Pokemon!'. 
"""
interface Connection {
  edges: [Edge!]!
  pageInfo: PageInfo!
}

"""
Input field for fields of Connection type, e.g. PokemonMoveConnection.
"""
input ConnectionInput {
  first: Int
  last: Int
  before: String
  after: String
}

"""
Used for cursor-based pagination.
"""
type PageInfo {
  startCursor: String!
  endCursor: String!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

type Query {
  """
  A placeholder field, as we cannot define an empty type. 
  """
  _empty: String
}