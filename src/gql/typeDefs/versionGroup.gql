#
# QUERIES
#

extend type Query {
  versionGroupByID(id: ID!): VersionGroup!

  """
  Select a VersionGroup by its code, e.g. 'RB', 'GSC', 'Colo', 'FRLG', 'SwSh'.
  """
  versionGroupByCode(name: String!): VersionGroup!

  """
  Select a VersionGroup by its snake_case name, e.g. 'Blue/Red'.
  """
  versionGroupByName(name: String!): VersionGroup!
  
  """
  Select VersionGroups, with optional cursor-based pagination.

  'introducedAfter' and 'introducedBefore' refer to the number of a Generation, and are inclusive.
  """
  versionGroups(
    pagination: PaginationInput
    filter: VersionGroupFilter
  ): [VersionGroup!]!
}

#
# NODES AND HELPER TYPES
#

type VersionGroup implements Node {
  id: ID!

  """
  The initials of the games in the VersionGroup, or an abbreviation. Corresponds with the conventions used on Bulbapedia.

  For example:
    'GS' for 'Gold/Silver'
    'C' for 'Crystal'
    'Pt' for 'Platinum'
    'Colo' for 'Colosseum'
    'PE' for 'Let's Go Pikachu and Eevee'
    'SwSh' for 'Sword/Shield'
  """
  code: String!

  descriptions: VersionGroupDescriptionConnection

  """
  The formatted name of the VersionGroup. If there are multiple games in the group, they are separated by a '/'.

  For example:
    'Gold/Silver' for 'GS'
    'SwSh' for 'Sword/Shield'
  """
  formattedName: String!

  """
  The Generation in which the VersionGroup was introduced. 
  """
  introduced: VersionGroupIntroductionConnection

  """
  The name of the VersionGroup in snake_case. Separate versions are separeted by hyphens.

  For example:
    red-blue
    heart_gold-soul_silver
    lets_go_pikachu-lets_go_eevee
  """
  name: String!

  sprites: VersionGroupSpriteConnection
}

#
# CONNECTIONS AND EDGES
# 

# DESCRIPTION

type VersionGroupDescriptionConnection implements Connection {
  count(filter: DescriptionFilter): Int!
  
  edges(
    pagination: PaginationInput
    filter: DescriptionFilter
  ): [VersionGroupDescriptionEdge!]! 

}

type VersionGroupDescriptionEdge implements Edge {  
  node: Description!
}

# GENERATION

type VersionGroupIntroductionConnection implements Connection {
  count(filter: GenerationFilter): Int!
  
  edges(
    pagination: PaginationInput
    filter: GenerationFilter
  ): [VersionGroupIntroductionEdge!]! 

}

type VersionGroupIntroductionEdge implements Edge {  
  node: Generation!
}

# SPRITE

type VersionGroupSpriteConnection implements Connection {
  count(filter: SpriteFilter): Int!
  
  edges(
    pagination: PaginationInput
    filter: SpriteFilter
  ): [VersionGroupSpriteEdge!]! 

}

type VersionGroupSpriteEdge implements Edge {  
  node: Sprite!
}

#
# INPUTS
#

input VersionGroupFilter {
  """
  The number of the Generation in which the VersionGroup was introduced.
  """
  introduced: Int

  """
  The number of the Generation after which the VersionGroup was introduced, inclusive.
  """
  introducedAfter: Int

  """
  The number of the Generation before which the VersionGroup was introduced, inclusive.
  """
  introducedBefore: Int

  """
  The name of the VersionGroup in snake_case.
  """
  name: String

  """
  Entities whose name contains the given string, case-insensitive.
  """
  contains: String

  """
  Entities whose name ends with the given string, case-insensitive.
  """
  endsWith: String

  """
  Entities whose name starts with the given string, case-insensitive.
  """
  startsWith: String
}