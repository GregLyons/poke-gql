#
# QUERIES
#

extend type Query {
  descriptionByID(id: ID!): Description!

  """
  Select Descriptions, with optional cursor-based pagination.
  """
  descriptions(
    cursor: String,
    limit: Int,
  ): [Description!]!
}

#
# NODES AND HELPER TYPES
#

type Description implements Node {
  id: ID!

  """
  The entity to which the Description applies.
  """
  entity: DescriptionEntityConnection

  """
  The class of entity that the Description is describing, e.g. 'ITEM'.
  """ 
  entityClass: DescriptionClass!

  """
  The text of the Description as it appears on in-game/on Bulbapedia.
  """
  text: String!

  """
  The VersionGroup(s) in which the Description is present.
  """
  versionGroups: DescriptionVersionGroupConnection
}

#
# CONNECTIONS AND EDGES
#

# ABILITY

type DescriptionAbilityConnection implements Connection {
  edges(pagination: PaginationInput): [DescriptionAbilityEdge!]!
  count: Int!
}

type DescriptionAbilityEdge implements Edge {  
  node: Ability!
}

# ITEM

type DescriptionItemConnection implements Connection {
  edges(pagination: PaginationInput): [DescriptionItemEdge!]!
  count: Int!
}

type DescriptionItemEdge implements Edge {  
  node: Item!
}

# MOVE 

type DescriptionMoveConnection implements Connection {
  edges(pagination: PaginationInput): [DescriptionMoveEdge!]!
  count: Int!
}

type DescriptionMoveEdge implements Edge {  
  node: Move!
}

# VERSION GROUP 

type DescriptionVersionGroupConnection implements Connection {
  edges(pagination: PaginationInput): [DescriptionVersionGroupEdge!]!
  count: Int!
}

type DescriptionVersionGroupEdge implements Edge {  
  node: VersionGroup!
}

#
# ENUMS
#

"""
The type of entity that the Description is describing.
"""
enum DescriptionClass {
  ABILITY
  ITEM
  MOVE
}

#
# UNIONS 
#

union DescriptionEntityConnection = DescriptionAbilityConnection | DescriptionItemConnection | DescriptionMoveConnection